"use strict";!function(c){var t="NYC-RR-",n=t+"static-cache-v1",i=t+"dynamic-cache-v1",r=t+"cors-dynamic-cache-v1",s=["/","/index.html","/restaurant.html","/css/styles.css","/js/main.js","/js/dbhelper.js","/js/index.js","/js/restaurant_info.js","/img/image-placeholder.svg","/404.html","/offline.html","/favicon.ico"];function a(t){c.clients.matchAll().then(function(e){e.forEach(function(e){e.postMessage({action:t})})}).catch(function(e){console.log("[SW] Something failed while sending message to clients, error",e)})}c.addEventListener("install",function(e){e.waitUntil(caches.open(n).then(function(e){return e.addAll(s)}).catch(function(e){console.log("[SW] Installation failed, error:",e)}))}),c.addEventListener("activate",function(e){e.waitUntil(caches.keys().then(function(e){return Promise.all(e.filter(function(e){return e.startsWith(t)&&e!==n&&e!==i}).map(function(e){return caches.delete(e)}))}).then(function(){return c.clients.claim()}).catch(function(e){console.log("[SW] Activation failed, error:",e)}))}),c.addEventListener("fetch",function(n){if(n.request.url.startsWith(c.location.origin))if(-1<n.request.url.indexOf("restaurant.html")){if(-1===n.request.url.search(/id=./))return void n.respondWith(caches.match("/404.html"));n.respondWith(caches.match("/restaurant.html"))}else n.respondWith(caches.match(n.request).then(function(e){return e||caches.open(i).then(function(t){return fetch(n.request).then(function(e){return 404===e.status?caches.match("/404.html"):(t.put(n.request,e.clone()).catch(function(e){console.log("[SW] Dynamic caching failed, error",e,n.request.url)}),e)}).catch(function(e){return console.log("[SW] Fetch request failed, error",e),caches.match("/offline.html")})}).catch(function(e){console.log("[SW] Opening dynamic cache failed, error",e)})}).catch(function(e){console.log("[SW] Something failed while matching a request, error",e)}));else n.request.url.startsWith("https://maps.googleapis.com/maps/api/staticmap")&&n.respondWith(caches.match(n.request).then(function(e){return e||("only-if-cached"!==n.request.cache||"same-origin"===n.request.mode?caches.open(r).then(function(t){return fetch(n.request).then(function(e){return t.put(n.request,e.clone()).catch(function(e){"no-cors"===n.request.mode||n.request.url.startsWith("chrome-extension")?console.log("[SW] Dynamic caching failed, skipped error",e,n.request.url):(caches.delete(r),console.log("[SW] Dynamic caching failed, error",e,n.request.url,"The cache is cleared with CORS resources."))}),e})}):void 0)}))}),c.addEventListener("message",function(e){"refresh"===e.data.action&&e.waitUntil(c.skipWaiting().then(function(){a("refreshed")}).catch(function(e){console.log("[SW] Something failed while skipping wait, error",e)})),"dismiss"===e.data.action&&e.waitUntil(a("dismissed"))})}(self);
//# sourceMappingURL=sw.js.map
