"use strict";!function(r){var e="NYC-RR-",n=e+"static-cache-v1",i=e+"dynamic-cache-v1",o=["/","/index.html","/restaurant.html","/css/styles.css","/js/app.js","/js/main.js","/img/image-fallback.svg","/js/intersection-observer.js","/404.html","/offline.html"],a="http://localhost:1337/restaurants",c="http://localhost:1337/reviews",s=c+"/?restaurant_id=";function u(n){return new Promise(function(t){var i,e=parseInt(n.slice(14));i=e,r.indexedDB.open("nyc_rr_data",1).onsuccess=function(t){var n=t.target.result,e=n.transaction(["restaurants"],"readonly").objectStore("restaurants"),r=e.get(i);r.onsuccess=function(t){fetch(a+"/"+i+"/?is_favorite="+t.target.result.is_favorite,{method:"PUT"}).then(function(){fetch(a+"/"+i).then(function(t){if(!t.ok)throw Error("Request failed. Returned status of "+t.statusText);return t.json()}).then(function(t){var e=n.transaction(["restaurants"],"readwrite").objectStore("restaurants");e.put(t)})}).catch(function(t){console.log(t)})}},t()})}function l(n){return new Promise(function(t){var i,e=n.slice(12);i=e,r.indexedDB.open("nyc_rr_data",1).onsuccess=function(t){var r=t.target.result,e=r.transaction(["reviews"],"readonly").objectStore("reviews"),n=e.get(i);n.onsuccess=function(t){var e=t.target.result;delete e.id,delete e.offline_request,fetch(c,{method:"POST",body:JSON.stringify(e),headers:new Headers({"Content-Type":"application/json"})}).then(function(){fetch(""+s+e.restaurant_id).then(function(t){if(!t.ok)throw Error("Request failed. Returned status of "+t.statusText);return t.json()}).then(function(t){var e=r.transaction(["reviews"],"readwrite").objectStore("reviews"),n=e.delete(i);n.onerror=function(t){console.log(t.target.error)},t.forEach(function(t){var e=r.transaction(["reviews"],"readwrite").objectStore("reviews"),n=e.put(t);n.onerror=function(t){console.log(t.target.error)}})})}).catch(function(t){console.log(t)})}},t()})}function f(e){r.clients.matchAll().then(function(t){t.forEach(function(t){t.postMessage({action:e})})}).catch(function(t){console.log("[SW] Something failed while sending message to clients, error",t)})}r.addEventListener("install",function(t){t.waitUntil(caches.open(n).then(function(t){return t.addAll(o)}).catch(function(t){console.log("[SW] Installation failed, error:",t)}))}),r.addEventListener("activate",function(t){t.waitUntil(caches.keys().then(function(t){return Promise.all(t.filter(function(t){return t.startsWith(e)&&t!==n&&t!==i}).map(function(t){return caches.delete(t)}))}).then(function(){return r.clients.claim()}).catch(function(t){console.log("[SW] Activation failed, error:",t)}))}),r.addEventListener("fetch",function(n){if(n.request.url.startsWith(r.location.origin))if(-1<n.request.url.indexOf("restaurant.html")){if(-1===n.request.url.search(/id=./))return void n.respondWith(caches.match("/404.html"));n.respondWith(caches.match("/restaurant.html"))}else n.respondWith(caches.match(n.request).then(function(t){return t||caches.open(i).then(function(e){return fetch(n.request).then(function(t){return 404===t.status?caches.match("/404.html"):(e.put(n.request,t.clone()).catch(function(t){console.log("[SW] Dynamic caching failed, error",t,n.request.url)}),t)}).catch(function(t){return console.log("[SW] Fetch request failed, error",t),caches.match("/offline.html")})}).catch(function(t){console.log("[SW] Opening dynamic cache failed, error",t)})}).catch(function(t){console.log("[SW] Something failed while matching a request, error",t)}))}),r.addEventListener("sync",function(t){var e;t.waitUntil((e=t,new Promise(function(t){-1<e.tag.indexOf("favorite-sync-")?t(u(e.tag)):-1<e.tag.indexOf("review-sync-")&&t(l(e.tag))})))}),r.addEventListener("message",function(t){"refresh"===t.data.action&&t.waitUntil(r.skipWaiting().then(function(){f("refreshed")}).catch(function(t){console.log("[SW] Something failed while skipping wait, error",t)})),"dismiss"===t.data.action&&t.waitUntil(f("dismissed")),-1<t.data.action.indexOf("favorite-sync-")&&t.waitUntil(u(t.data.action)),-1<t.data.action.indexOf("review-sync-")&&t.waitUntil(l(t.data.action))})}(self);
//# sourceMappingURL=sw.js.map
